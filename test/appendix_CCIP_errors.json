{
  "routerErrors": [
    {
      "error": "UnsupportedDestinationChain",
      "parameters": ["uint64 destChainSelector"],
      "selector": "0xae236d9c",
      "description": "Thrown when the destination chain is not supported."
    },
    {
      "error": "InsufficientFeeTokenAmount",
      "parameters": [],
      "selector": "0x07da6ee6",
      "description": "Thrown when the CCIP fees are paid with native tokens, but not enough is sent with the transaction."
    },
    {
      "error": "InvalidMsgValue",
      "parameters": [],
      "selector": "0x1841b4e1",
      "description": "Thrown when the CCIP fees are not paid in native tokens, but msg.value is non-zero."
    }
  ],
  "onRampErrors": [
    {
      "error": "CannotSendZeroTokens",
      "parameters": [],
      "selector": "0x5cf04449",
      "description": "Thrown when the user tries to send a zero amount of tokens."
    },
    {
      "error": "InvalidAddress",
      "parameters": ["bytes encodedAddress"],
      "selector": "0x370d875f",
      "description": "Thrown when the receiver address is invalid."
    },
    {
      "error": "InvalidChainSelector",
      "parameters": ["uint64 chainSelector"],
      "selector": "0xd9a9cd68",
      "description": "Thrown when an invalid destination chain selector is used."
    },
    {
      "error": "InvalidExtraArgsTag",
      "parameters": [],
      "selector": "0x5247fdce",
      "description": "Thrown when an invalid extra arguments tag is used."
    },
    {
      "error": "MaxFeeBalanceReached",
      "parameters": [],
      "selector": "0xe5c7a491",
      "description": "Thrown when the onRamp has reached its maximum fee storage capacity."
    },
    {
      "error": "MessageGasLimitTooHigh",
      "parameters": [],
      "selector": "0x4c4fc93a",
      "description": "Thrown when the gas limit is too high."
    },
    {
      "error": "MessageTooLarge",
      "parameters": ["uint256 maxSize", "uint256 actualSize"],
      "selector": "0x86933789",
      "description": "Thrown when the message size exceeds the maximum allowed size."
    },
    {
      "error": "MustBeCalledByRouter",
      "parameters": [],
      "selector": "0x1c0a3529",
      "description": "This error should never be thrown as the router always makes the call."
    },
    {
      "error": "NotAFeeToken",
      "parameters": ["address token"],
      "selector": "0xa7499d20",
      "description": "Thrown when an unsupported fee token is used."
    },
    {
      "error": "RouterMustSetOriginalSender",
      "parameters": [],
      "selector": "0xa4ec7479",
      "description": "This error should never be thrown as the router always sets the sender."
    },
    {
      "error": "SenderNotAllowed",
      "parameters": ["address sender"],
      "selector": "0xd0d25976",
      "description": "Thrown when the sender is not allowlisted."
    },
    {
      "error": "UnsupportedNumberOfTokens",
      "parameters": [],
      "selector": "0x4c056b6a",
      "description": "Thrown when too many tokens are involved in the transfer."
    },
    {
      "error": "UnsupportedToken",
      "parameters": ["IERC20 token"],
      "selector": "0xbf16aab6",
      "description": "Thrown when an unsupported transfer token is used."
    }
  ],
  "rateLimiterErrors": [
    {
      "error": "AggregateValueMaxCapacityExceeded",
      "parameters": ["uint256 capacity", "uint256 requested"],
      "selector": "0xf94ebcd1",
      "description": "Thrown when the user requests to transfer more value than the capacity of the aggregate rate limit bucket."
    },
    {
      "error": "AggregateValueRateLimitReached",
      "parameters": ["uint256 minWaitInSeconds", "uint256 available"],
      "selector": "0x15279c08",
      "description": "Thrown when the user requests to transfer more value than currently available in the bucket."
    },
    {
      "error": "BucketOverfilled",
      "parameters": [],
      "selector": "0x9725942a",
      "description": "Indicates an invalid bucket state (should never occur)."
    },
    {
      "error": "PriceNotFoundForToken",
      "parameters": ["address token"],
      "selector": "0x9a655f7b",
      "description": "Thrown when a price cannot be found for a specific token."
    },
    {
      "error": "TokenMaxCapacityExceeded",
      "parameters": ["uint256 capacity", "uint256 requested", "address tokenAddress"],
      "selector": "0x1a76572a",
      "description": "Thrown when the user requests to transfer more of a token than the capacity of the bucket."
    },
    {
      "error": "TokenRateLimitReached",
      "parameters": ["uint256 minWaitInSeconds", "uint256 available", "address tokenAddress"],
      "selector": "0xd0c8d23a",
      "description": "Thrown when the user requests to transfer more of a token than currently available in the bucket."
    }
  ],
  "erc20TokenErrors": [
    {
      "error": "ERC20: burn amount exceeds balance",
      "description": "Thrown when the amount to be burned exceeds the pool balance."
    },
    {
      "error": "ERC20: transfer amount exceeds allowance",
      "description": "Thrown when the transfer amount exceeds the allowance."
    }
  ],
  "priceRegistryErrors": [
    {
      "error": "ChainNotSupported",
      "parameters": ["uint64 chain"],
      "selector": "0x2e59db3a",
      "description": "Thrown when a chain is not supported."
    },
    {
      "error": "StaleGasPrice",
      "parameters": ["uint64 destChainSelector", "uint256 threshold", "uint256 timePassed"],
      "selector": "0xf08bcb3e",
      "description": "Thrown when the gas price is stale."
    },
    {
      "error": "TokenNotSupported",
      "parameters": ["address token"],
      "selector": "0x06439c6b",
      "description": "Thrown when a token is not supported."
    },
    {
      "error": "StaleTokenPrice",
      "parameters": ["address token", "uint256 threshold", "uint256 timePassed"],
      "selector": "0xc65fdfca",
      "description": "Thrown when the price of a token is stale."
    }
  ]
}
